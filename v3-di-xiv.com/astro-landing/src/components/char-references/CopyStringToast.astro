---
interface Props {
  localizedToast: string;
  toastID: string;
  stringToCopy: string;
  triggerButtonID: string;
}

const { localizedToast, toastID, stringToCopy, triggerButtonID } =
  Astro.props as Props;
---

<div
  id={toastID}
  class="hidden select-none justify-center w-auto h-auto rounded-lg p-3 mobile-only:p-1 items-center toast-glassbox toast z-20"
>
  <div class="inline-block glassbox p-2 mobile-only:p-1 rounded-md">
    <slot />
  </div>
  <p
    class="regular text-lg mobile-only:text-sm inline-block text-wrap ml-2 mobile-only:mr-2"
  >
    {localizedToast}
  </p>
</div>
<script
  define:vars={{
    toastID,
    localizedToast,
    stringToCopy,
    triggerButtonID,
  }}
>
  document.addEventListener("DOMContentLoaded", () => {
    document
      .getElementById(triggerButtonID)
      .addEventListener("click", function () {
        const string = stringToCopy;
        navigator.clipboard
          .writeText(string)
          .then(function () {
            const toast = document.getElementById(toastID);
            toast.classList.remove("hidden");
            toast.classList.add("flex");
            setTimeout(function () {
              toast.classList.remove("flex");
              toast.classList.add("hidden");
            }, 3000);
          })
          .catch(function (err) {
            console.error("Could not copy text: ", err);
          });
      });
  });
</script>
